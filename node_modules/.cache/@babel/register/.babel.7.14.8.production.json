{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/ZionCheeese/Documents/BotFolder/\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/ZionCheeese/Documents/BotFolder\",\"filename\":\"/Users/ZionCheeese/Documents/BotFolder/bot.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/ZionCheeese/Documents/BotFolder\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/ZionCheeese/Documents/BotFolder/",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/ZionCheeese/Documents/BotFolder",
      "filename": "/Users/ZionCheeese/Documents/BotFolder/bot.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "/Users/ZionCheeese/Documents/BotFolder",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ZionCheeese/Documents/BotFolder/bot.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ZionCheeese/Documents/BotFolder/bot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ZionCheeese/Documents/BotFolder/",
        "sourceFileName": "bot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst Discord = require(\"discord.js\");\n\nconst config = require(\"./config.json\");\n\nconst client = new Discord.Client();\nclient.on(\"ready\", function () {\n  console.log(\"lol moment\");\n});\nclient.on(\"message\", message => {\n  console.log(\"doing smth\");\n  if (!message.content.startsWith(config.prefix) || message.author.bot) return undefined;\n  let isBotOwner = message.author.id == \"InsomniacCheese#0948\";\n\n  if (message.content.startsWith(config.prefix + \"ping\")) {\n    message.channel.send(\"pong!\");\n  } else if (message.content.startsWith(config.prefix + \"foo\")) {\n    message.channel.send(\"bar!\");\n  } else if (message.content.startsWith(config.prefix + \"shutdown\")) {\n    console.log(\"shutdown start\");\n    message.channel.send('Shutting down...').then(m => {\n      client.destroy();\n    });\n  } else if (message.content.startsWith(config.prefix + \"restart\")) {\n    console.log(\"restart start\");\n    message.channel.send('Restarting...').then(m => {\n      client.destroy().then(() => {\n        client.login(config.token);\n      });\n    });\n  }\n});\nclient.login(config.token);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvdC5qcyJdLCJuYW1lcyI6WyJEaXNjb3JkIiwicmVxdWlyZSIsImNvbmZpZyIsImNsaWVudCIsIkNsaWVudCIsIm9uIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJjb250ZW50Iiwic3RhcnRzV2l0aCIsInByZWZpeCIsImF1dGhvciIsImJvdCIsInVuZGVmaW5lZCIsImlzQm90T3duZXIiLCJpZCIsImNoYW5uZWwiLCJzZW5kIiwidGhlbiIsIm0iLCJkZXN0cm95IiwibG9naW4iLCJ0b2tlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLGVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHLElBQUlILE9BQU8sQ0FBQ0ksTUFBWixFQUFmO0FBRUFELE1BQU0sQ0FBQ0UsRUFBUCxDQUFVLE9BQVYsRUFBbUIsWUFBVztBQUM1QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNELENBRkQ7QUFJQUosTUFBTSxDQUFDRSxFQUFQLENBQVUsU0FBVixFQUFzQkcsT0FBRCxJQUFhO0FBQ2hDRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0EsTUFBSSxDQUFDQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0JDLFVBQWhCLENBQTJCUixNQUFNLENBQUNTLE1BQWxDLENBQUQsSUFBOENILE9BQU8sQ0FBQ0ksTUFBUixDQUFlQyxHQUFqRSxFQUFzRSxPQUFPQyxTQUFQO0FBRXRFLE1BQUlDLFVBQVUsR0FBR1AsT0FBTyxDQUFDSSxNQUFSLENBQWVJLEVBQWYsSUFBcUIsc0JBQXRDOztBQUVBLE1BQUlSLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsVUFBaEIsQ0FBMkJSLE1BQU0sQ0FBQ1MsTUFBUCxHQUFnQixNQUEzQyxDQUFKLEVBQXdEO0FBQ3RESCxJQUFBQSxPQUFPLENBQUNTLE9BQVIsQ0FBZ0JDLElBQWhCLENBQXFCLE9BQXJCO0FBQ0QsR0FGRCxNQUVPLElBQUlWLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsVUFBaEIsQ0FBMkJSLE1BQU0sQ0FBQ1MsTUFBUCxHQUFnQixLQUEzQyxDQUFKLEVBQXVEO0FBQzVESCxJQUFBQSxPQUFPLENBQUNTLE9BQVIsQ0FBZ0JDLElBQWhCLENBQXFCLE1BQXJCO0FBQ0QsR0FGTSxNQUVBLElBQUlWLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsVUFBaEIsQ0FBMkJSLE1BQU0sQ0FBQ1MsTUFBUCxHQUFnQixVQUEzQyxDQUFKLEVBQTREO0FBRWpFTCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWjtBQUNBQyxJQUFBQSxPQUFPLENBQUNTLE9BQVIsQ0FBZ0JDLElBQWhCLENBQXFCLGtCQUFyQixFQUF5Q0MsSUFBekMsQ0FBOENDLENBQUMsSUFBSTtBQUNqRGpCLE1BQUFBLE1BQU0sQ0FBQ2tCLE9BQVA7QUFDRCxLQUZEO0FBSUQsR0FQTSxNQU9BLElBQUliLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsVUFBaEIsQ0FBMkJSLE1BQU0sQ0FBQ1MsTUFBUCxHQUFnQixTQUEzQyxDQUFKLEVBQTJEO0FBRWhFTCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQkMsSUFBaEIsQ0FBcUIsZUFBckIsRUFBc0NDLElBQXRDLENBQTJDQyxDQUFDLElBQUk7QUFDOUNqQixNQUFBQSxNQUFNLENBQUNrQixPQUFQLEdBQWlCRixJQUFqQixDQUFzQixNQUFNO0FBQzFCaEIsUUFBQUEsTUFBTSxDQUFDbUIsS0FBUCxDQUFhcEIsTUFBTSxDQUFDcUIsS0FBcEI7QUFDRCxPQUZEO0FBR0QsS0FKRDtBQU1EO0FBQ0YsQ0EzQkQ7QUE2QkFwQixNQUFNLENBQUNtQixLQUFQLENBQWFwQixNQUFNLENBQUNxQixLQUFwQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvWmlvbkNoZWVlc2UvRG9jdW1lbnRzL0JvdEZvbGRlci8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEaXNjb3JkID0gcmVxdWlyZShcImRpc2NvcmQuanNcIik7XG5jb25zdCBjb25maWcgPSByZXF1aXJlKFwiLi9jb25maWcuanNvblwiKTtcbmNvbnN0IGNsaWVudCA9IG5ldyBEaXNjb3JkLkNsaWVudCgpO1xuXG5jbGllbnQub24oXCJyZWFkeVwiLCBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coXCJsb2wgbW9tZW50XCIpO1xufSk7XG5cbmNsaWVudC5vbihcIm1lc3NhZ2VcIiwgKG1lc3NhZ2UpID0+IHtcbiAgY29uc29sZS5sb2coXCJkb2luZyBzbXRoXCIpO1xuICBpZiAoIW1lc3NhZ2UuY29udGVudC5zdGFydHNXaXRoKGNvbmZpZy5wcmVmaXgpIHx8IG1lc3NhZ2UuYXV0aG9yLmJvdCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICBsZXQgaXNCb3RPd25lciA9IG1lc3NhZ2UuYXV0aG9yLmlkID09IFwiSW5zb21uaWFjQ2hlZXNlIzA5NDhcIjtcblxuICBpZiAobWVzc2FnZS5jb250ZW50LnN0YXJ0c1dpdGgoY29uZmlnLnByZWZpeCArIFwicGluZ1wiKSkge1xuICAgIG1lc3NhZ2UuY2hhbm5lbC5zZW5kKFwicG9uZyFcIik7XG4gIH0gZWxzZSBpZiAobWVzc2FnZS5jb250ZW50LnN0YXJ0c1dpdGgoY29uZmlnLnByZWZpeCArIFwiZm9vXCIpKSB7XG4gICAgbWVzc2FnZS5jaGFubmVsLnNlbmQoXCJiYXIhXCIpO1xuICB9IGVsc2UgaWYgKG1lc3NhZ2UuY29udGVudC5zdGFydHNXaXRoKGNvbmZpZy5wcmVmaXggKyBcInNodXRkb3duXCIpKSB7XG5cbiAgICBjb25zb2xlLmxvZyhcInNodXRkb3duIHN0YXJ0XCIpO1xuICAgIG1lc3NhZ2UuY2hhbm5lbC5zZW5kKCdTaHV0dGluZyBkb3duLi4uJykudGhlbihtID0+IHtcbiAgICAgIGNsaWVudC5kZXN0cm95KCk7XG4gICAgfSk7XG5cbiAgfSBlbHNlIGlmIChtZXNzYWdlLmNvbnRlbnQuc3RhcnRzV2l0aChjb25maWcucHJlZml4ICsgXCJyZXN0YXJ0XCIpKSB7XG5cbiAgICBjb25zb2xlLmxvZyhcInJlc3RhcnQgc3RhcnRcIik7XG4gICAgbWVzc2FnZS5jaGFubmVsLnNlbmQoJ1Jlc3RhcnRpbmcuLi4nKS50aGVuKG0gPT4ge1xuICAgICAgY2xpZW50LmRlc3Ryb3koKS50aGVuKCgpID0+IHtcbiAgICAgICAgY2xpZW50LmxvZ2luKGNvbmZpZy50b2tlbik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgfVxufSk7XG5cbmNsaWVudC5sb2dpbihjb25maWcudG9rZW4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "Discord",
        "require",
        "config",
        "client",
        "Client",
        "on",
        "console",
        "log",
        "message",
        "content",
        "startsWith",
        "prefix",
        "author",
        "bot",
        "undefined",
        "isBotOwner",
        "id",
        "channel",
        "send",
        "then",
        "m",
        "destroy",
        "login",
        "token"
      ],
      "mappings": ";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAME,MAAM,GAAG,IAAIH,OAAO,CAACI,MAAZ,EAAf;AAEAD,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,CAFD;AAIAJ,MAAM,CAACE,EAAP,CAAU,SAAV,EAAsBG,OAAD,IAAa;AAChCF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,MAAI,CAACC,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2BR,MAAM,CAACS,MAAlC,CAAD,IAA8CH,OAAO,CAACI,MAAR,CAAeC,GAAjE,EAAsE,OAAOC,SAAP;AAEtE,MAAIC,UAAU,GAAGP,OAAO,CAACI,MAAR,CAAeI,EAAf,IAAqB,sBAAtC;;AAEA,MAAIR,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2BR,MAAM,CAACS,MAAP,GAAgB,MAA3C,CAAJ,EAAwD;AACtDH,IAAAA,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqB,OAArB;AACD,GAFD,MAEO,IAAIV,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2BR,MAAM,CAACS,MAAP,GAAgB,KAA3C,CAAJ,EAAuD;AAC5DH,IAAAA,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqB,MAArB;AACD,GAFM,MAEA,IAAIV,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2BR,MAAM,CAACS,MAAP,GAAgB,UAA3C,CAAJ,EAA4D;AAEjEL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqB,kBAArB,EAAyCC,IAAzC,CAA8CC,CAAC,IAAI;AACjDjB,MAAAA,MAAM,CAACkB,OAAP;AACD,KAFD;AAID,GAPM,MAOA,IAAIb,OAAO,CAACC,OAAR,CAAgBC,UAAhB,CAA2BR,MAAM,CAACS,MAAP,GAAgB,SAA3C,CAAJ,EAA2D;AAEhEL,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,IAAAA,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqB,eAArB,EAAsCC,IAAtC,CAA2CC,CAAC,IAAI;AAC9CjB,MAAAA,MAAM,CAACkB,OAAP,GAAiBF,IAAjB,CAAsB,MAAM;AAC1BhB,QAAAA,MAAM,CAACmB,KAAP,CAAapB,MAAM,CAACqB,KAApB;AACD,OAFD;AAGD,KAJD;AAMD;AACF,CA3BD;AA6BApB,MAAM,CAACmB,KAAP,CAAapB,MAAM,CAACqB,KAApB",
      "sourceRoot": "/Users/ZionCheeese/Documents/BotFolder/",
      "sourcesContent": [
        "const Discord = require(\"discord.js\");\nconst config = require(\"./config.json\");\nconst client = new Discord.Client();\n\nclient.on(\"ready\", function() {\n  console.log(\"lol moment\");\n});\n\nclient.on(\"message\", (message) => {\n  console.log(\"doing smth\");\n  if (!message.content.startsWith(config.prefix) || message.author.bot) return undefined;\n\n  let isBotOwner = message.author.id == \"InsomniacCheese#0948\";\n\n  if (message.content.startsWith(config.prefix + \"ping\")) {\n    message.channel.send(\"pong!\");\n  } else if (message.content.startsWith(config.prefix + \"foo\")) {\n    message.channel.send(\"bar!\");\n  } else if (message.content.startsWith(config.prefix + \"shutdown\")) {\n\n    console.log(\"shutdown start\");\n    message.channel.send('Shutting down...').then(m => {\n      client.destroy();\n    });\n\n  } else if (message.content.startsWith(config.prefix + \"restart\")) {\n\n    console.log(\"restart start\");\n    message.channel.send('Restarting...').then(m => {\n      client.destroy().then(() => {\n        client.login(config.token);\n      });\n    });\n    \n  }\n});\n\nclient.login(config.token);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1627196093360
  }
}